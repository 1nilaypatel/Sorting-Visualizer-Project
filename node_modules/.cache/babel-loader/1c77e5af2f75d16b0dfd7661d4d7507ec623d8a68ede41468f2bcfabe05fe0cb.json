{"ast":null,"code":"export function getQuickSortAnimations(array) {\n  //Setting Time complexities\n  document.getElementById(\"Time_Worst\").innerText = \"O(N^2)\";\n  document.getElementById(\"Time_Average\").innerText = \"Θ(N log N)\";\n  document.getElementById(\"Time_Best\").innerText = \"Ω(N log N)\";\n\n  //Setting Space complexity\n  document.getElementById(\"Space_Worst\").innerText = \"O(log N)\";\n  const animations = [];\n  if (array.length <= 1) return array;\n  quickSort(array, 0, array.length - 1, animations);\n  for (var i = 0; i < array.length; i++) {\n    let animationStep = [i, i, 5];\n    animations.push(animationStep);\n  }\n  return animations;\n}\nfunction swap(mainArray, i, j, animations) {\n  let animationStep;\n  animationStep = [i, i, 2];\n  animations.push(animationStep);\n  animationStep = [j, j, 2];\n  animations.push(animationStep);\n  var temp = mainArray[i];\n  mainArray[i] = mainArray[j];\n  mainArray[j] = temp;\n  animationStep = [i, i, 2];\n  animations.push(animationStep);\n  animationStep = [j, j, 2];\n  animations.push(animationStep);\n  animationStep = [i, mainArray[i], 4];\n  animations.push(animationStep);\n  animationStep = [j, mainArray[j], 4];\n  animations.push(animationStep);\n}\nfunction quickSort(mainArray, startIdx, endIdx, animations) {\n  if (startIdx >= endIdx) return;\n  var pivot_pos = quick_partition(mainArray, startIdx, endIdx, animations);\n  quickSort(mainArray, startIdx, pivot_pos - 1, animations);\n  quickSort(mainArray, pivot_pos + 1, endIdx, animations);\n}\nfunction quick_partition(mainArray, startIdx, endIdx, animations) {\n  var i = startIdx + 1;\n  var piv = mainArray[startIdx];\n  let animationStep = [startIdx, startIdx, 1];\n  animations.push(animationStep);\n  for (var j = startIdx + 1; j <= endIdx; j++) {\n    if (piv > mainArray[j]) {\n      let animationStep = [j, j, 1];\n      animations.push(animationStep); // color change\n      swap(mainArray, i, j, animations);\n      animationStep = [i, j, 5];\n      animations.push(animationStep);\n      animationStep = [i, j, 5];\n      animations.push(animationStep);\n      i++;\n    }\n  }\n  swap(mainArray, startIdx, i - 1, animations);\n  for (var t = startIdx; t <= i; t++) {\n    animationStep = [t, t, 3]; // color change\n    animations.push(animationStep);\n  }\n  return i - 1;\n}","map":{"version":3,"names":["getQuickSortAnimations","array","document","getElementById","innerText","animations","length","quickSort","i","animationStep","push","swap","mainArray","j","temp","startIdx","endIdx","pivot_pos","quick_partition","piv","t"],"sources":["/Users/nilaypatel/Desktop/stufff/coding/current projects/nilay_website/website 3 (sorting visulizer)/Sorting-Visualizer-Tutorial-master/src/sortingAlgorithms/quick_sort.js"],"sourcesContent":["export function getQuickSortAnimations(array) {\n    //Setting Time complexities\n    document.getElementById(\"Time_Worst\").innerText=\"O(N^2)\";\n    document.getElementById(\"Time_Average\").innerText=\"Θ(N log N)\";\n    document.getElementById(\"Time_Best\").innerText=\"Ω(N log N)\";\n\n    //Setting Space complexity\n    document.getElementById(\"Space_Worst\").innerText=\"O(log N)\";\n\n    const animations = [];\n    if (array.length <= 1) return array;\n    quickSort(array, 0, array.length - 1, animations);\n    for(var i = 0; i < array.length; i++){\n        let animationStep = [i, i, 5];\n        animations.push(animationStep);\n    }\n    return animations;\n}\n\nfunction swap(mainArray, i, j, animations){\n    let animationStep;\n    animationStep = [i, i, 2];\n    animations.push(animationStep);\n    animationStep = [j, j, 2];\n    animations.push(animationStep);\n\n    var temp = mainArray[i];\n    mainArray[i] = mainArray[j];\n    mainArray[j] = temp;\n\n    animationStep = [i, i, 2];\n    animations.push(animationStep);\n    animationStep = [j, j, 2];\n    animations.push(animationStep);\n    animationStep = [i, mainArray[i], 4];\n    animations.push(animationStep);\n    animationStep = [j, mainArray[j], 4];\n    animations.push(animationStep);\n}\n\nfunction quickSort(mainArray, startIdx, endIdx, animations) {\n    if (startIdx >= endIdx) return;\n\n    var pivot_pos = quick_partition(mainArray, startIdx, endIdx, animations);\n    quickSort(mainArray, startIdx, pivot_pos - 1, animations);\n    quickSort(mainArray, pivot_pos + 1, endIdx, animations);\n}\n\nfunction quick_partition(mainArray, startIdx, endIdx, animations) {\n    var i = startIdx + 1;\n    var piv = mainArray[startIdx];\n    let animationStep = [startIdx, startIdx, 1];\n    animations.push(animationStep);\n    for (var j = startIdx + 1; j <= endIdx; j++) {\n        if (piv > mainArray[j]) {\n            let animationStep = [j, j, 1];\n            animations.push(animationStep); // color change\n            swap(mainArray, i, j, animations);\n            animationStep = [i, j, 5];\n            animations.push(animationStep);\n            animationStep = [i, j, 5];\n            animations.push(animationStep);\n            i++;\n        }\n    }\n\n    swap(mainArray, startIdx, i - 1, animations);\n\n    for (var t = startIdx; t <= i; t++) {\n        animationStep = [t, t, 3]; // color change\n        animations.push(animationStep);\n    }\n\n    return i - 1;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}