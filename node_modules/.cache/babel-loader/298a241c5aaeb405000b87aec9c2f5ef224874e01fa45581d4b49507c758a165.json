{"ast":null,"code":"export function getQuickSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return animations;\n}\nfunction quickSortHelper(mainArray, startIdx, endIdx, animations) {\n  if (startIdx >= endIdx) return;\n  quickSort(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n  quickSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  quickSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n}\nfunction quick_(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    let animationStep = [i, j, 2];\n    animations.push(animationStep); // push to compare indices\n    animationStep = [i, j, 3];\n    animations.push(animationStep); // push to finalize the values in which comparision occured\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      // We overwrite the value at index k in the original array with the\n      // value at index i in the auxiliary array.\n      animationStep = [k, auxiliaryArray[i], 4];\n      animations.push(animationStep); // push to change the height\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animationStep = [k, auxiliaryArray[j], 4];\n      animations.push(animationStep);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    let animationStep = [i, i, 2];\n    animations.push(animationStep);\n    animationStep = [i, i, 3];\n    animations.push(animationStep);\n    animationStep = [k, auxiliaryArray[i], 4];\n    animations.push(animationStep);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    let animationStep = [j, j, 2];\n    animations.push(animationStep);\n    animationStep = [j, j, 3];\n    animations.push(animationStep);\n    animationStep = [k, auxiliaryArray[j], 4];\n    animations.push(animationStep);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}","map":{"version":3,"names":["getQuickSortAnimations","array","animations","length","quickSortHelper","mainArray","startIdx","endIdx","quickSort","middleIdx","auxiliaryArray","quick_","k","i","j","animationStep","push"],"sources":["/Users/nilaypatel/Desktop/stufff/coding/current projects/nilay_website/website 3 (sorting visulizer)/Sorting-Visualizer-Tutorial-master/src/sortingAlgorithms/quick_sort.js"],"sourcesContent":["export function getQuickSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    quickSortHelper(array, 0, array.length - 1, animations);\n    return animations;\n  }\n  \n  function quickSortHelper(mainArray, startIdx, endIdx, animations){\n    if (startIdx >= endIdx) return;  \n\n    quickSort(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n    quickSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n    quickSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  }\n  \n  function quick_(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations){\n    let k = startIdx;\n    let i = startIdx;\n    let j = middleIdx + 1;\n    while (i <= middleIdx && j <= endIdx) {\n      let animationStep = [i, j, 2];\n      animations.push(animationStep); // push to compare indices\n      animationStep = [i, j, 3];\n      animations.push(animationStep); // push to finalize the values in which comparision occured\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n        // We overwrite the value at index k in the original array with the\n        // value at index i in the auxiliary array.\n        animationStep = [k, auxiliaryArray[i], 4];\n        animations.push(animationStep); // push to change the height\n        mainArray[k++] = auxiliaryArray[i++];\n      } else {\n        animationStep = [k, auxiliaryArray[j], 4];\n        animations.push(animationStep);\n        mainArray[k++] = auxiliaryArray[j++];\n      }\n    }\n    while (i <= middleIdx) {\n      let animationStep = [i, i, 2];\n      animations.push(animationStep);\n      animationStep = [i, i, 3];\n      animations.push(animationStep);\n      animationStep = [k, auxiliaryArray[i], 4];\n        animations.push(animationStep);\n      mainArray[k++] = auxiliaryArray[i++];\n    }\n    while (j <= endIdx) {\n      let animationStep = [j, j, 2];\n      animations.push(animationStep); \n      animationStep = [j, j, 3];\n      animations.push(animationStep);\n      animationStep = [k, auxiliaryArray[j], 4];\n        animations.push(animationStep);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}